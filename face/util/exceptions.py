'''
Thrown when a user doesn't have an available question.  There may be questions
that haven't been answered, but none of them are in the 'ready' state, meaning
that they've been parsed but their answer hasn't been computed.
'''
class NoQuestionReadyException(Exception):
    def __init__(self, user):
        self.user = user
        
    def __str__(self):
        return 'No question ready for user %s' % self.user.username

'''
[Depracated]
This exception is thrown when a user enters a pair of passwords that do not match
during registration.
'''
class DifferingPasswordException(Exception):
    def __init__(self):
        pass
    
    def __str__(self):
        return 'Provided passwords do not match.'

'''
[Deprecated]
This exception is thrown when a user requests a username that already exists.
'''
class DuplicateNameException(Exception):
    def __init__(self, uname):
        self.uname = uname
        
    def __str__(self):
        return 'The username %s already exists.' % self.uname

'''
[Deprecated]
This exception is thrown when a user tries to hack the URL or POST parameters to
view data that isn't available to them, such as the status of another user's guess.
'''
class UnauthorizedAttemptException(Exception):
    def __init__(self, user, qid):
        self.user = user
        self.qid = qid
        
    def __str__(self):
        return '%s made an authorized guess attempt on question ID #%d' % (self.user.username, self.qid)

'''
This exception is thrown when a new user tries to create an account but no QuestionSet
is available to pair them to.  New QuestionSets are supposed to be generated by a 
periodic cron job. 
'''
class NoQuestionSetReadyException(Exception):
    def __init__(self, user):
        self.user = user
    
    def __str__(self):
        return 'No question set available for user #%d (%s)' % (self.user.id, self.user.username)

'''
This exception is typically thrown when the processing is SUPPOSED to terminate,
i.e. in the handler for /bomb.  This exception shouldn't ever be caught and
is primarily just an exception for testing.  
'''
class KamikazeException(Exception):
    def __init__(self, user):
        self.user = user
        
    def __str__(self):
        return '%s just dropped a KamikazeException' % self.user.username